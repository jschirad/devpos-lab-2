name: CI Matrix & Reports

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 2 * * *" # Runs daily at 2 AM UTC
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run tests"
        required: true
        default: "staging"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ "3.9", "3.10", "3.11" ]
        exclude:
          - os: windows-latest
            python-version: "3.9"
    steps:
      - name: Print Environment
        run: echo "Running in ${{ github.event.inputs.environment }}"
        
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q --junitxml=test-results.xml | tee test-results.txt
    
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
            name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
            path: |
                test-results.txt
                retention-days: 1

  report:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results

    - name: Generate Consolidated Summary
      run: |
        echo "## 🧪 Test Matrix Summary" >> $GITHUB_STEP_SUMMARY
        echo "| OS | Python | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----|---------|--------|" >> $GITHUB_STEP_SUMMARY
        
        for result in ubuntu-latest windows-latest; do
        for version in 3.9 3.10 3.11; do
          if [[ "$result" == "windows-latest" && "$version" == "3.9" ]]; then
            continue
          fi
          if [ -d "test-results/test-results-$result-$version" ]; then
            echo "| $result | $version | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| $result | $version | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
        done
        done   